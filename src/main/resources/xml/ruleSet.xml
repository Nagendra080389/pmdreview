<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Default ruleset used by the CodeClimate Engine for Salesforce.com Apex" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
   <description>Default ruleset used by the Code Climate Engine for Salesforce.com Apex</description>

   <!-- COMPLEXITY -->
   <rule message="Avoid really long classes (lines of code)" ref="category/apex/design.xml/ExcessiveClassLength">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="1000"/>
      </properties>
   </rule>
   <rule message="Avoid long parameter lists" ref="category/apex/design.xml/ExcessiveParameterList">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="4"/>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="This class has too many public methods and attributes" ref="category/apex/design.xml/ExcessivePublicCount">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="25"/>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="The constructor has an NCSS line count of {0}" ref="category/apex/design.xml/NcssConstructorCount">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="20"/>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="The method {0}() has an NCSS line count of {1}" ref="category/apex/design.xml/NcssMethodCount">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="60"/>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="The type has an NCSS line count of {0}" ref="category/apex/design.xml/NcssTypeCount">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="700"/>
         </properties>
   </rule>
   <rule message="The {0} ''{1}'' has a Standard Cyclomatic Complexity of {2}." ref="category/apex/design.xml/StdCyclomaticComplexity">
      <priority>3</priority>
      <properties>
         <property name="reportLevel" value="10"/>
         </properties>
   </rule>
   <rule message="Too many fields" ref="category/apex/design.xml/TooManyFields">
      <priority>3</priority>
      <properties>
         <property name="maxfields" value="20"/>
         </properties>
   </rule>
   <rule message="Deeply nested if..else statements are hard to read" ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts">
      <priority>3</priority>
      <properties>
         <property name="problemDepth" value="4"/>
         </properties>
   </rule>
   <rule ref="category/apex/design.xml/CyclomaticComplexity">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>

   <!-- PERFORMANCE -->
   <rule message="Avoid Soql queries inside loops" ref="category/apex/performance.xml/AvoidSoqlInLoops">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="Avoid Sosl queries inside loops" ref="category/apex/performance.xml/AvoidSoslInLoops">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="Avoid DML Statements inside loops" ref="category/apex/performance.xml/AvoidDmlStatementsInLoops">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="Avoid directly accessing Trigger.old and Trigger.new" ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="Avoid logic in triggers" ref="category/apex/bestpractices.xml/AvoidLogicInTrigger">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         </properties>
   </rule>
   <rule message="Avoid using global modifier" ref="category/apex/bestpractices.xml/AvoidGlobalModifier">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Avoid hardcoding ID's" ref="category/apex/errorprone.xml/AvoidHardcodingId">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>

   <!-- NAMING -->
   <rule message="Class names should begin with an uppercase character" ref="category/apex/codestyle.xml/ClassNamingConventions">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Method name does not begin with a lower case character." ref="category/apex/codestyle.xml/MethodNamingConventions">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Classes should not have non-constructor methods with the same name as the class" ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="{0} variable {1} should begin with {2}" ref="category/apex/codestyle.xml/VariableNamingConventions">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>

   <!-- TESTS -->
   <rule message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call" ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests" ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>

   <!-- SECURITY -->
   <rule message="Apex classes should declare a sharing model if DML or SOQL is used" ref="category/apex/security.xml/ApexSharingViolations">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Apex callouts should use encrypted communication channels" ref="category/apex/security.xml/ApexInsecureEndpoint">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Avoid making DML operations in Apex class constructor/init method" ref="category/apex/security.xml/ApexCSRF">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Apex classes should safely redirect to a known location" ref="category/apex/security.xml/ApexOpenRedirect">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Apex classes should escape variables merged in DML query" ref="category/apex/security.xml/ApexSOQLInjection">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Apex classes should escape Strings obtained from URL parameters" ref="category/apex/security.xml/ApexXSSFromURLParam">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Apex classes should escape addError strings" ref="category/apex/security.xml/ApexXSSFromEscapeFalse">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Apex Crypto should use random IV/key" ref="category/apex/security.xml/ApexBadCrypto">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Validate CRUD permission before SOQL/DML operation" ref="category/apex/security.xml/ApexCRUDViolation">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Calling potentially dangerous method" ref="category/apex/security.xml/ApexDangerousMethods">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>
   <rule message="Consider using named credentials for authenticated callouts" ref="category/apex/security.xml/ApexSuggestUsingNamedCred">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>

   <!-- BRACES -->
   <rule message="Avoid using if statements without curly braces" ref="category/apex/codestyle.xml/IfStmtsMustUseBraces">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>
   <rule message="Avoid using 'while' statements without curly braces" ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>
   <rule message="Avoid using 'if...else' statements without curly braces" ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Avoid using 'for' statements without curly braces" ref="category/apex/codestyle.xml/ForLoopsMustUseBraces">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>

   <!-- EMPTY -->
   <rule message="Avoid empty catch blocks" ref="category/apex/errorprone.xml/EmptyCatchBlock">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Avoid empty 'if' statements" ref="category/apex/errorprone.xml/EmptyIfStmt">
      <priority>3</priority>
      <properties>
         </properties>
   </rule>
   <rule message="Avoid empty 'while' statements" ref="category/apex/errorprone.xml/EmptyWhileStmt">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>
   <rule message="Avoid empty try or finally blocks" ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>
   <rule message="Avoid empty block statements." ref="category/apex/errorprone.xml/EmptyStatementBlock">
      <priority>3</priority>
      <properties>
      </properties>
   </rule>
</ruleset>
